name: CI
on:
  push:
  create:
    tags: ["v*"]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: [3.7, 3.8]
    steps:
      - uses: actions/checkout@v2

      - name: Setting up python environment
        uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.python_version}}

      - name: Installing dependencies
        run: |
          sudo apt-get install libyaml-dev
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements.build.txt

      - name: Running pytest
        run: |
          python -m pytest tests

      - name: Running pylint
        run: |
          pylint keypunch_bot

      - name: Running mypy
        run: |
          mypy keypunch_bot

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'create' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v2

      - name: Determining the version
        id: gen_version
        run: echo "::set-output name=version::${GITHUB_REF/refs\/tags\/v/}"

      - name: Patching package version
        run: sed -i "s/__version__ *= *\"[^\"]*\"/__version__ = \"${{steps.gen_version.outputs.version}}\"/" ./keypunch_bot/__init__.py

      - name: Logging into Heroku Container Registry
        run: heroku container:login
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      - name: Building container and pushing it into the Registry
        run: heroku container:push -a ${{ secrets.HEROKU_APP }} web
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      - name: Building container and pushing it into the Registry
        run: heroku container:release -a ${{ secrets.HEROKU_APP }} web
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
